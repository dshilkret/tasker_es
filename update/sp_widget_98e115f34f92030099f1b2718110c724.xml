<?xml version="1.0" encoding="UTF-8"?>
<record_update table="sp_widget">
    <sp_widget action="INSERT_OR_UPDATE">
        <client_script><![CDATA[function ($scope, $rootScope, $timeout, spUtil, $location, $window, nowAttachmentHandler, $log, spAriaUtil) {
	$scope.mandatory = [];
	$scope.errorMessages = [];
	$scope.data.show_sql = false;
	$scope.saveButtonSuffix = spUtil.getAccelerator('s');
	$scope.adminMenu = {
		encodedPageUrl: encodeURIComponent($location.url()),
		getClientScriptCount: function() {
			var count = 0;
			if ($scope.data.f.client_script) {
				count += $scope.data.f.client_script.onChange.length;
				count += $scope.data.f.client_script.onLoad.length;
				count += $scope.data.f.client_script.onSubmit.length;
			}
			return count;
		}
	};
 
 // $scope.ftn = "dog cat bird";
	
	$scope.getUIActions = function(type) {
		if ($scope.data.disableUIActions)
			return [];
		if (type) {
			return $scope.data.f._ui_actions.filter(function(action) {
				//We handle the primary action button separately.
				return !action.primary && action['is_' + type];
			});
		} else {
			return $scope.data.f._ui_actions;
		}
	}

	$scope.getPrimaryAction = function() {
		var primaryActions = $scope.data.f._ui_actions.filter(function(action) {
			return action.primary;
		});
		return (primaryActions.length) ? primaryActions[0] : null;
	}

	$scope.getUIActionContextMenu = function(event) {
		var menu = [];
		if (event.ctrlKey)
			return menu;

		var contextActions = $scope.getUIActions('context');
		contextActions.forEach(function(action) {
			menu.push([action.name, function() {
				$scope.triggerUIAction(action);
			}]);
		});

		if (contextActions.length > 0)
			menu.push(null);
		menu.push([$scope.data.exportPDFMsg, function() {exportPDF("");}]);
		menu.push([$scope.data.exportPDFLandMsg, function() {exportPDF('true');}]);

		return menu;
	}

	function exportPDF(landscape) {
		$window.open("/" + $scope.data.f.table + ".do?PDF&landscape=" + landscape + "&sys_id=" + $scope.data.sys_id + "&sysparm_view=" + $scope.data.f.view);
	}

	//trigger the primary UI Action on save (if there is one)
	var deregister = $scope.$on('$sp.save', function() {
		var primaryAction = $scope.getPrimaryAction();
		if (primaryAction)
			$scope.triggerUIAction(primaryAction);
	});
	$scope.$on('$destroy', function() {deregister()});

	$scope.triggerUIAction = function(action) {
		if ($scope.data.disableUIActions && !action.primary) {
			return;
		}

		var activeElement = document.activeElement;
		if (activeElement) {
			activeElement.blur();
		}

		$timeout(function() {
			if (g_form) {
				g_form.submit(action.action_name || action.sys_id);
			}
		});
	}

	$scope.$on("spModel.uiActionComplete", function(evt, response) {
		var sysID = (response.isInsert) ? response.sys_id : $scope.data.sys_id;
		loadForm($scope.data.table, sysID).then(constructResponseHandler(response));
	});

	function constructResponseHandler(response) {
		return function() {
			var message;
			var eventName = "sp.form.record.updated";
			if (response.isInsert) {
				message = $scope.data.recordAddedMsg;
				var search = $location.search();
				search.sys_id = response.sys_id;
				search.spa = 1;
				$location.search(search).replace();
			} else
				message = $scope.data.updatedMsg;

			$scope.data.hideRelatedLists = hideRelatedLists();
			$scope.$emit(eventName, $scope.data.f._fields);
			$rootScope.$broadcast(eventName,$scope.ftn, $scope.data.f._fields);
			$scope.status = message;
			spUtil.addTrivialMessage(message);
			$timeout(clearStatus, 2000);
		}
	}

	var ctrl = this;
	// switch forms
	var unregister = $scope.$on('$sp.list.click', onListClick);
	$scope.$on("$destroy", function() {
		unregister();
	})

	function onListClick(evt,arg) {
		loadForm(arg.table, arg.sys_id);
	}

	function loadForm(table, sys_id){
		var f = {};
		$scope.data.table = f.table = table;
		$scope.data.sys_id = f.sys_id = sys_id;
		f.view = $scope.data.view;
		return $scope.server.update().then(setupAttachmentHandler);
	}

	function openRelatedList(e, queryString){
		// todo: Open this in a modal
		$location.search(queryString);
		e.preventDefault();
	}

	$scope.$on('spModel.fields.rendered', function() {
		if (ctrl.panels)
			ctrl.panels.removeClass('shift-out').addClass('shift-in');
	});

	var g_form;
	$scope.$on('spModel.gForm.initialized', function(e, gFormInstance) {
		if (gFormInstance.getTableName() == $scope.data.f.table)
			g_form = gFormInstance;
	});

	// Show or hide related lists
	$scope.$watch('data.f._related_lists', function(){
		$scope.data.hideRelatedLists = hideRelatedLists();
	}, true);

	function hideRelatedLists() {
		if (!$scope.data.f._related_lists)
			return true;

		if ($scope.options.hideRelatedLists == true)
			return true;

		if ($scope.data.sys_id == '-1')
			return true;

		// If all related lists are visible=false then hide
		if ($scope.data.f._related_lists.length > 0) {
			for (var i in $scope.data.f._related_lists) {
				var list = $scope.data.f._related_lists[i];
				if (list.visible) {
					return false;
				}
			}
		}
		return true;
	}

	function clearStatus() {
		$scope.status = "";
	}

	function setupAttachmentHandler(){
		$scope.attachmentHandler = new nowAttachmentHandler(appendDone, appendError);

		$timeout(function() {
			var sizeLimit = 1024 * 1024 * 24; // 24MB
			$scope.attachmentHandler.setParams($scope.data.table, $scope.data.f._attachmentGUID, sizeLimit);
		});

		$scope.$on('dialog.upload_too_large.show', function(e){
			$log.error($scope.data.largeAttachmentMsg);
			spUtil.addErrorMessage($scope.data.largeAttachmentMsg);
		});
	}
	setupAttachmentHandler();

	function appendDone() {
		// don't know here whether upload succeeded, so can't show msg either way
		$scope.$broadcast("sp.attachments.update", $scope.data.f._attachmentGUID);
		spAriaUtil.sendLiveMessage($scope.data.attachmentSuccessMsg);
	}

	function appendError(error) {
		$scope.errorMessages.push(error);
		spUtil.addErrorMessage(error.msg + error.fileName);
	}
}]]></client_script>
        <controller_as>c</controller_as>
        <css>.bs-tabs {
  width: 1100px;
}
.btn-default {
    display: none;
}
.panel-title {
  word-wrap: break-word;
}

.comment {
	font-weight: bold;
	margin-top: 2px;
	margin-bottom: 2px;
}
.mce-panel, .mce-btn {
	background-image: none;
	background-color: #f0f3f4;
}

.action-btn {
  margin-right: 5px;
}

.timeline-container {
   max-height: 50vh;
   height: 100%;
   overflow-y: auto;
}

.panel .panel {
    height: auto !important;
  
}

.attachment-button {
  .glyphicon-paperclip {
    font-size: 18px;
  }
}

.empty-state-wrapper {
  width: 100%;
  height: 100%;
  align-items: center;
  display: flex;
  flex-direction: column;
  padding: 10vh 20px 20px;

  .empty-state {
    border: 1px solid #e7e9eb;
    border-radius: 10px;
    max-width: 700px;
    padding: 30px 40px 20px;
    position: relative;

    .empty-state-badge {
      top: -36px;
      left: 50%;
      position: absolute;
      height: 72px;
      width: 72px;
      -webkit-align-items: center;
      -ms-flex-align: center;
      align-items: center;
      border-radius: 100%;
      color: #ffffff;
      display: -webkit-flex;
      display: -ms-flexbox;
      display: flex;
      font-size: 40px;
      -webkit-justify-content: center;
      -ms-flex-pack: center;
      justify-content: center;
      margin-left: -36px;
      text-align: center;
    }

    .empty-state-header {
      font-size: 30px;
      text-align: center;
      color: #343d47;
    }

    .empty-state-content {
      ul {
        list-style: disc outside;
        margin: 0 0 10px 0;
        padding: 0 0 0 30px;
      }
    }
  }
}


/**
 * Responsive Bootstrap Tabs 
 */

@mixin ellipsis(){
    max-width: 100%;
    overflow: hidden;
    text-overflow: ellipsis;
    white-space: nowrap;
    word-wrap: normal;
    width: 100%;
}

@mixin icon-styles(){
  position: relative;
  top: 1px;
  display: inline-block;
  font-family: 'Glyphicons Halflings';
  font-style: normal;
  font-weight: 400;
  line-height: 1;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

@mixin transform($transform){
  -webkit-transform: $transform;
  -moz-transform: $transform;
  -ms-transform: $transform;
  -o-transform: $transform;
  transform: $transform;
}

@media screen and (max-width: 479px) {
  .nav-tabs-responsive {
    &gt; li {
      display: none;
      width: 23%;
      &gt; a {
        @include ellipsis();
        width: 100%;
        text-align: center;
        vertical-align: top;
      }
      &amp;.active {
        width: 34%;
        &amp;:first-child {
          margin-left: 0%;
        }
      }
      &amp;.active,
      &amp;.prev,
      &amp;.next {
        display: block;
      }
      &amp;.prev,
      &amp;.next {
        -webkit-transform: scale(0.9);
        transform: scale(0.9);
      }
      &amp;.next &gt; a,
      &amp;.prev &gt; a {
        -webkit-transition: none;
        transition: none;
        .text {
          display: none;
        }
        &amp;:after,
        &amp;:after {
          @include icon-styles();
        }
      }
      &amp;.prev &gt; a:after {
        content: "\e079";
      }
      &amp;.next &gt; a:after {
        content: "\e080";
      }
      &amp;.dropdown {
        &gt; a &gt; .caret {
          display: none;
        }
        &gt; a:after {
          content: "\e114";
        }
        &amp;.active &gt; a {
          &amp;:after {
            display: none;
          }
          &gt; .caret {
            display: inline-block;
          }
        }

    
        }
      }
    }
  }
}



/**
 * Demo Styles
 */

.wrapper {
  padding: 15px 0;
}

.bs-example-tabs .nav-tabs {
  margin-bottom: 15px;
}

@media (max-width: 479px) {
  #narrow-browser-alert {
    display: none;
  }
}</css>
        <data_table>sp_instance</data_table>
        <demo_data/>
        <description/>
        <docs/>
        <field_list/>
        <has_preview>false</has_preview>
        <id>search_results</id>
        <internal>false</internal>
        <link/>
        <name>Search Results</name>
        <option_schema/>
        <public>false</public>
        <roles/>
        <script><![CDATA[// form functionality - URL parameter driven
(function($sp, input, data, options, gs) {
  /* "use strict"; -linter issues */
  // populate the 'data' variable
	data.attachmentUploadSuccessMsg = gs.getMessage("Attachment upload was successful");
	data.recordAddedMsg = gs.getMessage("Record Added");
	data.updatedMsg = gs.getMessage("updated_uppercase");
	data.exportPDFMsg = gs.getMessage("Export to PDF");
	data.exportPDFLandMsg = gs.getMessage("Export to PDF (landscape)");
	data.addAttachmentMsg = gs.getMessage("Add an attachment");
	data.largeAttachmentMsg = gs.getMessage("Attached files must be smaller than {0} - please try again", "24MB");
	data.attachmentSuccessMsg = gs.getMessage("Attachment successfully uploaded");
	
	data.isAdmin = gs.hasRightsTo('sp/configure.all/execute', null);
	data.emptyStateTemplate = options.empty_state_template;
	data.disableUIActions = options.disableUIActions === "true";
	data.hideRelatedLists = options.hideRelatedLists || false;

	if (input) {
		data.table = input.table;
		data.sys_id = input.sys_id;
		data.view = input.view;
		var result = {};
		if (input._fields) {
			result = $sp.saveRecord(input.table, input.sys_id, input._fields);
			data.sys_id = result.sys_id;
		}

		if (input.sys_id == '-1')
			data.isNewRecord = true;
	} else {
		data.table = options.table || $sp.getParameter("t") || $sp.getParameter("table") || $sp.getParameter("sl_table");
		data.sys_id = options.sys_id || $sp.getParameter("sys_id") || $sp.getParameter("sl_sys_id");
		data.view = options.view || $sp.getParameter("v") || $sp.getParameter("view"); // no default
	}

	data.query = $sp.getParameter("query") || options.query;
	data.f = {};
	if (!data.table)
		return;
	
	// Form widget is not a supported way to view an attachment
	if (data.table == "sys_attachment") {
		data.tableUnsupported = true;
		return;
	}

	if (!GlideTableDescriptor.isValid(data.table))
		return;

	if (!data.sys_id)
		return;

	var rec = $sp.getRecord(data.table, data.sys_id);
	data.isValid = rec.isValid() || data.sys_id == "-1";
	if (!data.isValid)
		return;

	data.table = rec.getRecordClassName();
	data.tableHierarchy = GlideDBObjectManager.getTables(data.table).toArray().join();
	data.canWrite = rec.canWrite();
	data.canAttach = data.canWrite && gs.hasRole(gs.getProperty('glide.attachment.role')) && !GlideTableDescriptor.get(data.table).getED().getBooleanAttribute("no_attachment");
	data.f = $sp.getForm(data.table, data.sys_id, data.query, data.view);

	// Activity formatter is hardcoded to set specific options
	for (var f in data.f._formatters) {
		var fm = data.f._formatters[f];
		if (fm.formatter == "activity.xml") {
			fm.hardcoded = true;
			fm.widgetInstance = $sp.getWidget('widget-ticket-conversation',
																{table: data.table,
																 sys_id: data.sys_id,
																 includeExtended: true,
																 title: "${Activity}",
																 use_dynamic_placeholder: true,
																 btnLabel: "${Post}"});
		} else
			fm.widgetInstance = $sp.getWidget(fm.widget, data);
	}
})($sp, input, data, options, gs);

// reference keywords retrieval

(function(sp, input, data, options, gs) {
 
    data.dcid = [];
   
    var gr  = new GlideRecord('x_153465_discover_discover_content_integration_details');
		gr.addQuery('from_table_name', data.table);
				
				
    gr.query();   //filter by discover_content_integration_context
   
				while(gr.next()){
						item = {};
						item.keyphrase = gr.getDisplayValue('discover_keyword_or_phrase');
				    item.context = gr.getDisplayValue('discover_content_integration_context');
					  item.fromtablename = gr.getDisplayValue('from_table_name');
					  item.fromfieldname = gr.getDisplayValue('from_field_name');
					 // item.isKeyword = gr.getDisplayValue('');
					  item.sysid = gr.getValue('sys_id');
					  var tbl = data.table;
					  
						
					  
					  var gr2 =new GlideRecord(tbl);
						gr2.addQuery('sys_id', data.sys_id);
						gr2.query();
					  while(gr2.next()){
							item.keyword = gr2.getDisplayValue(item.fromfieldname);
							
						}
						data.dcid.push(item);
				
						
				}

})($sp, input, data, options, gs);

]]></script>
        <servicenow>false</servicenow>
        <sys_class_name>sp_widget</sys_class_name>
        <sys_created_by>admin</sys_created_by>
        <sys_created_on>2017-11-14 20:10:04</sys_created_on>
        <sys_id>98e115f34f92030099f1b2718110c724</sys_id>
        <sys_mod_count>1</sys_mod_count>
        <sys_name>Search Results</sys_name>
        <sys_package display_value="Elastic ServiceNow Service" source="x_150952_elastic_s">12102eab4fca030099f1b2718110c7c5</sys_package>
        <sys_policy/>
        <sys_scope display_value="Elastic ServiceNow Service">12102eab4fca030099f1b2718110c7c5</sys_scope>
        <sys_update_name>sp_widget_98e115f34f92030099f1b2718110c724</sys_update_name>
        <sys_updated_by>admin</sys_updated_by>
        <sys_updated_on>2017-11-14 20:12:34</sys_updated_on>
        <template><![CDATA[


<div ng-if="!data.isValid && !data.emptyStateTemplate" class="panel panel-default">
  <div class="panel-body wrapper-lg text-center">
    <span ng-if="!data.tableUnsupported">${Record not found}</span>
    <span ng-if="data.tableUnsupported">${Form view not supported for requested table}</span>
  </div>
</div>



<div ng-if="!data.isValid && data.emptyStateTemplate" class="panel-shift">
  <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
</div>

<div ng-if="data.isValid" class="panel-shift">
  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && data.emptyStateTemplate">
    <div class="empty-state-wrapper panel panel-default" ng-include="data.emptyStateTemplate"></div>
  </div>

  <div class="" ng-if="!data.f._view.length && data.hideRelatedLists && !data.emptyStateTemplate">
    <div class="panel panel-default">
      <div class="panel-heading"><span class="panel-title">{{data.f.title}}</span> <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span></div>
      <div class="panel-body wrapper-lg text-center">
        ${No elements to display}
      </div>
    </div>
  </div>

  <div class="panel panel-default" ng-if="data.f._view.length || !data.hideRelatedLists" >
    <div class="panel-heading" ng-if="data.f.title.length" sp-context-menu="getUIActionContextMenu(event)">
      	<span class="dropdown m-r-xs" ng-if="(data.isAdmin || getUIActions('context').length > 0) && options.omitHeaderOptions != 'true'">
            <button aria-label="${Form menu}" class="btn btn-form-menu dropdown-toggle glyphicon glyphicon-menu-hamburger" style="line-height: 1.4em" id="adminMenu" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false"></button>
            <ul class="dropdown-menu" aria-labelledby="adminMenu">
              <li ng-if="::data.isAdmin"><a href="/{{data.f.table}}.do?sys_id={{data.f.sys_id}}" target="_blank">${Open in platform}</a></li>
              <li ng-if="::data.isAdmin" class="dropdown-header">${Configure}</li>
              <li ng-if="::data.isAdmin"><a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f._sections[0].id}}&sysparm_form=section&sysparm_view={{data.f.view}}" target="_blank">${Form Layout}</a></li>
              <li ng-if="::data.isAdmin"><a href="/slushbucket.do?sysparm_referring_url={{adminMenu.encodedPageUrl}}&sysparm_list={{data.f.table}}&sysparm_form=related_list&sysparm_view={{data.f.view}}" target="_blank">${Related Lists}</a></li>
              <li ng-if="::data.isAdmin"><a href="?id=lf&table=sys_ui_policy&filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id:'lf', table: 'sys_ui_policy', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${UI Policies} <span class="badge pull-right" ng-if="f.policy.length">{{f.policy.length}}</span></a></li>
              <li ng-if="::data.isAdmin"><a href="?id=lf&table=sys_script_client&filter=table%3D{{data.f.table}}%5EORtableIN{{data.tableHierarchy}}%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10" ng-click="openRelatedList($event, {id: 'lf', table: 'sys_script_client', filter: 'table%3D{{data.f.table}}%5EORtableIN{{data.f.table}},sys_metadata%5Eactive%3Dtrue%5Eui_type%3D1%5EORui_type%3D10'})">${Client Scripts} <span class="badge pull-right" ng-if="adminMenu.getClientScriptCount()">{{adminMenu.getClientScriptCount()}}</span></a></li>
              <li ng-if="getUIActions('context').length > 0 &&  data.isAdmin" role="separator" class="divider"></li>
              <li ng-repeat="action in getUIActions('context')"><a href="" ng-click="triggerUIAction(action)">{{action.name}}</a></li>
              <li ng-if="::data.isAdmin || getUIActions('context').length > 0" role="separator" class="divider"></li>
              <li><a target="_new" href="/{{data.f.table}}.do?PDF&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${Export to PDF}</a></li>
              <li><a target="_new" href="/{{data.f.table}}.do?PDF&landscape=true&sys_id={{data.sys_id}}&sysparm_view={{data.f.view}}">${Export to PDF (landscape)}</a></li>
            </ul>
        </span>
      <span class="panel-title" aria-label="{{data.f.title}}">{{data.f.title}}</span> <span ng-if="options.showFormView == 'true' && data.f.view != ''">[{{data.f.view_title}} view]</span>
      <div ng-if="attachmentHandler && data.canAttach" title="{{::data.addAttachmentMsg}}" class="pull-right attachment-button">
      	<sp-attachment-button></sp-attachment-button>
      </div>
    </div>
    <div class="panel-body">
      <!-- performance debug -->
      <div ng-if="data.show_sql">
        <div class="comment">
          <span ng-if="data.f._perf.sql_count">${SQL Statements {{data.f._perf.sql_count}}}, </span>
          <span>${Time {{data.f._perf.time}}}</span>
        </div>
        <div ng-repeat="s in data.f._perf.sql" class="{{s.type}}">
          {{s.statement}}
        </div>
      </div>
      <!-- attachments -->
      <sp-attachment-manager table="data.table" sys-id="data.f._attachmentGUID" omit-edit="!data.canAttach"></sp-attachment-manager>
      <!-- form -->
      <div>
        <sp-model form_model="data.f" mandatory="mandatory"></sp-model>
      </div>
      <!-- UI Action Links -->
      <div ng-if="getUIActions('link').length > 0">
        <label style="margin: 0;">${Related Links}</label>
        <div ng-repeat="action in getUIActions('link')">
          <a href ng-click="triggerUIAction(action)">{{action.name}}</a>
        </div>
      </div>
      <!-- related lists -->
      <div ng-if="!data.hideRelatedLists">
        <label style="margin: 0">${Related Lists}</label>
        <div style="margin-bottom: 7px; padding-bottom: 7px; border-bottom: 1px solid #f5f5f5;">
          <span ng-repeat="rl in data.f._related_lists" ng-if="rl.visible">
            <a ng-if="rl.type != 'REL'" href="?id=lf&table={{rl.table}}&filter={{rl.field}}%3D{{data.f.sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', filter: '{{rl.field}}%3D{{data.f.sys_id}}'})">{{rl.plural}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <a ng-if="rl.type == 'REL'" href="?id=lf&table={{rl.table}}&relationship_id={{rl.relationship_id}}&apply_to={{rl.apply_to}}&apply_to_sys_id={{rl.apply_to_sys_id}}&view={{data.f.view}}" ng-click="openRelatedList($event, {id: 'lf', table: '{{rl.table}}', apply_to: '{{rl.apply_to}}', apply_to_sys_id: '{{rl.apply_to_sys_id}}', relationship_id: '{{rl.relationship_id}}'})">{{rl.label}}
              <span class="label label-as-badge label-primary" ng-if="rl.count">{{rl.count}}</span>
            </a>
            <span ng-if="!$last" style="padding-left: .5em; padding-right: .5em;" aria-hidden="true"> | </span>
          </span>
        </div>
      </div>
    </div>

    <div class="panel-footer">
      <button ng-click="triggerUIAction(action)" ng-repeat="action in getUIActions('button')" class="btn btn-default action-btn">{{action.name}}</button>
      <span>{{status}}</span>
      <button ng-if="getPrimaryAction()" type="submit" ng-click="triggerUIAction(getPrimaryAction())" class="btn btn-primary action-btn pull-right">${Save} <span ng-if="saveButtonSuffix">(${{{saveButtonSuffix}}})</span></button>
      <div style="clear: both;"></div>
      <div ng-if="mandatory.length" class="alert alert-info" style="margin-top: .5em">
        <span ng-if="mandatory.length > 0">${Required information} </span>
        <span ng-repeat="f in mandatory" class="label label-danger" style="margin-right: .5em; display: inline-block;">{{f.label}}</span>
      </div>
      
    </div>
  

<div class="container">

	
	<div class="row">
		<div class="col-sm-12">
		<br>
			<script>
      //var queryTerm = $("input#key2").val($("td#key0").html());
      //var queryTermSP = $("input#key2").val($("td#key1").html());
			var numResults = 0;
			var Counter = 0;
       
			var queryURLBase="https://search-testdomain-y56yhnxcndddwuykob75fjvprq.us-east-1.es.amazonaws.com/enron/_search?pretty=&q=*";
      var queryURLBaseSP="https://search-testdomain-y56yhnxcndddwuykob75fjvprq.us-east-1.es.amazonaws.com/enron/_search?pretty=&q=*";
		Counter = 0;

  

function runQuery(numResults, queryURL){

	$.ajax({url: queryURL, method: "GET"}) 
		.done(function(ElasticData) {

			
			console.log("------------------------------------")
			console.log("URL: " + queryURL);
			console.log("------------------------------------")

			
			console.log(ElasticData);
			console.log("------------------------------------")

			
			for (var i=0; i<numResults; i++) {

					
					Counter++;

					
					var wellSection = $("<div>");
					wellSection.addClass('well');
					wellSection.attr('id', 'articleWell-' + Counter)
					$('#wellSection').append(wellSection);

					
					if(ElasticData.hits.hits[i]._index != "null")
					{
						$("#articleWell-"+ Counter).append('<h3 class="articleHeadline"><span class="label label-primary">' + Counter + '</span><strong> Connector: MS Exchange  ' +  "</strong></h3>");
						
						
						console.log(ElasticData.hits.hits[i]._source.mailbox);
					}
					
					
					if( ElasticData.hits.hits[i]._index && ElasticData.hits.hits[i].hasOwnProperty("original"))
					{
						$("#articleWell-"+ Counter).append('<h5>' + ElasticData.hits.hits[i]._index + "</h5>");

						
						console.log(elasticData.hits.hits[i]._source.mailbox);
					}

					
					$("#articleWell-"+ Counter).append('<h5>Index: ' + ElasticData.hits.hits[i]._index + "</h5>");
					$("#articleWell-"+ Counter).append('<h5>Mailbox: ' + ElasticData.hits.hits[i]._source.mailbox + "</h5>");
					$("#articleWell-"+ Counter).append('<h5>From Email: ' + ElasticData.hits.hits[i]._source.headers.From + "</h5>");
					$("#articleWell-"+ Counter).append('<h5>' + ElasticData.hits.hits[i]._source.body + "</h5>");
					
					console.log(ElasticData.hits.hits[i]._index);
					console.log(ElasticData.hits.hits[i]._source.mailbox);
					console.log(ElasticData.hits.hits[i]._source.headers.From);
					console.log(ElasticData.hits.hits[i]._source.body);	
			}
		});

}

function runQuerySP(numResults, queryURL){

	$.ajax({url: queryURL, method: "GET"}) 
		.done(function(ElasticData) {

			
			console.log("------------------------------------")
			console.log("URL: " + queryURL);
			console.log("------------------------------------")

			
			console.log(ElasticData);
			console.log("------------------------------------")

			
			for (var i=0; i<numResults; i++) {

					
					Counter++;

					
					var wellSectionSP = $("<div>");
					wellSectionSP.addClass('well');
					wellSectionSP.attr('id', 'articleWellSP-' + Counter)
					$('#wellSectionSP').append(wellSectionSP);

					
					if(ElasticData.hits.hits[i]._index != "null")
					{
						$("#articleWellSP-"+ Counter).append('<h3 class="articleHeadline"><span class="label label-primary">' + Counter + '</span><strong> Connector: SharePoint  ' +  "</strong></h3>");
						
						
						console.log(ElasticData.hits.hits[i]._source.mailbox);
					}
					
					
					if( ElasticData.hits.hits[i]._index && ElasticData.hits.hits[i].hasOwnProperty("original"))
					{
						$("#articleWellSP-"+ Counter).append('<h5>' + ElasticData.hits.hits[i]._index + "</h5>");

						
						console.log(elasticData.hits.hits[i]._source.mailbox);
					}

					
					$("#articleWellSP-"+ Counter).append('<h5>Index: ' + ElasticData.hits.hits[i]._index + "</h5>");
					$("#articleWellSP-"+ Counter).append('<h5>Mailbox: ' + ElasticData.hits.hits[i]._source.mailbox + "</h5>");
					$("#articleWellSP-"+ Counter).append('<h5>From Email: ' + ElasticData.hits.hits[i]._source.headers.From + "</h5>");
					$("#articleWellSP-"+ Counter).append('<h5>' + ElasticData.hits.hits[i]._source.body + "</h5>");
					
					console.log(ElasticData.hits.hits[i]._index);
					console.log(ElasticData.hits.hits[i]._source.mailbox);
					console.log(ElasticData.hits.hits[i]._source.headers.From);
					console.log(ElasticData.hits.hits[i]._source.body);	
			}
		});

}
	
	
	$('#runSearch').on('click', function(){

		
		Counter = 0;

	
		//$("#wellSection").empty();
    //	$("#wellSectionSP").empty();

		$("input#key2").val($("td#key0").html());
		var searchTerm = $("input#key2").val();
    
		queryURL = queryURLBase + searchTerm;

		
		numResults = $("#numRecordsSelect").val();


		
		runQuery(10, queryURL);

		
		return false;
	});	

   $('#runSearchSP').on('click', function(){

		
		Counter = 0;

	
		//$("#wellSection").empty();
     //	$("#wellSectionSP").empty();

		$("input#key3").val($("td#key1").html());
		var searchTermSP = $("input#key3").val();
    
		queryURLSP = queryURLBaseSP + searchTermSP;

		
		numResults = $("#numRecordsSelect").val();


		
		runQuerySP(10, queryURLSP);

		
		return false;
	});	

$('#clearAll').on('click', function(){
	Counter = 0;
	$("#wellSection").empty();
  $("#wellSectionSP").empty();
	});
      </script>
<div class="container">

	
	<div class="row">
		<div class="col-sm-12">
	
					   
      
					   <!-- <input type="text" class="form-control" id="searchTerm" value="{{data.f.title}}"> -->
			
					  <button type="submit" class="btn btn-default" id="runSearch"><i class="fa fa-search"></i> Search</button>
  					  <button type="button" class="btn btn-default" id="clearAll"><i class="fa fa-trash"></i> Clear Results</button>
						<button type="submit" class="btn btn-default" id="runSearchSP"><i class="fa fa-search"></i> Search</button>
		</div>
	</div>

	<!--Tabs Begin ************************************************************************************************************-->
  
    <div class="bs-tabs" role="tabpanel" data-example-id="togglable-tabs">
      <ul id="myTab" class="nav nav-tabs nav-tabs-responsive" role="tablist">
        <li role="presentation" class="active">
          <a href="#home" id="home-tab" role="tab" data-toggle="tab" aria-controls="Incident Notes" aria-expanded="true">
            <span class="text">Notes</span>
          </a>
        </li>
        <li role="presentation" class="next">
          <a href="#profile" role="tab" id="profile-tab" data-toggle="tab" aria-controls="SharePoint">
            <span class="text">SharePoint</span>
          </a>
        </li>
       
        <li role="presentation">
          <a href="#samsa" role="tab" id="samsa-tab" data-toggle="tab" aria-controls="samsa">
            <span class="text">Exchange</span>
          </a>
        </li>
      </ul>
      <div id="myTabContent" class="tab-content">
        <div role="tabpanel" class="tab-pane fade in active" id="home" aria-labelledby="home-tab"></div>
        <div role="tabpanel" class="tab-pane fade" id="profile" aria-labelledby="profile-tab"></div>
       				<div class="panel-body" id="wellSectionSP"></div>
        <div role="tabpanel" class="tab-pane fade" id="samsa" aria-labelledby="samsa-tab">
  						<div class="panel-body" id="wellSection"></div>
      </div>
  </div>
<table style= "display:none" class="rwd-table">
    <tr >
      <th>System Id</th>
      <th>Keyword</th>
      <th>Context</th>
      <th>From Table Name</th>
      <th>From Field Name</th>
      <th>Key</th>
      
     
      
 
    </tr>

    <tr style= "display:none" ng-repeat="item in c.data.dcid"  >
      <td id="sysid" data-th="System Id">{{item.sysid}}</td>
      <td id="keyp" data-th="Keyword">{{item.keyphrase}}</td>
      <td id="ctx" data-th="Context">{{item.context}}</td>
      <td id="ftn" data-th="From Table Name">{{item.fromtablename}}</td>
      <td id="ffn" data-th="From Field Name">{{item.fromfieldname}}</td>
      <td id="key{{$index}}" data-th="Key">{{item.keyword}} </td>
    
      
       
    </tr>
     
      </table>
   <div id="keyFields" style= "display:none">
  			<input type="text" id="key2" value="test" >
  			<input type="text" id="key3" value="test1" >
   </div>
      

<script src="https://code.jquery.com/jquery.js"></script>
<script>
  
  

  
  
 $("#samsa-tab").on("click", function() {
   $("#wellSectionSP").empty();
   //$("#wellSection").empty();
   $('#runSearch').trigger('click');
}); 
$("#profile-tab").on("click", function() {
  $("#wellSection").empty();
  //$("#wellSectionSP").empty();
   $('#runSearchSP').trigger('click');
}); 
  $("#home-tab").on("click", function() {
  $("#wellSection").empty();
    $("#wellSectionSP").empty();
}); 
</script>
<script>
  //style="display:none"
   (function($) {

  'use strict';

  $(document).on('show.bs.tab', '.nav-tabs-responsive [data-toggle="tab"]', function(e) {
    var $target = $(e.target);
    var $tabs = $target.closest('.nav-tabs-responsive');
    var $current = $target.closest('li');
    var $parent = $current.closest('li.dropdown');
		$current = $parent.length > 0 ? $parent : $current;
    var $next = $current.next();
    var $prev = $current.prev();
    var updateDropdownMenu = function($el, position){
      $el
      	.find('.dropdown-menu')
        .removeClass('pull-xs-left pull-xs-center pull-xs-right')
      	.addClass( 'pull-xs-' + position );
    };

    $tabs.find('>li').removeClass('next prev');
    $prev.addClass('prev');
    $next.addClass('next');
    
    updateDropdownMenu( $prev, 'left' );
    updateDropdownMenu( $current, 'center' );
    updateDropdownMenu( $next, 'right' );
  });

})(jQuery);   
      </script>


]]></template>
    </sp_widget>
</record_update>
